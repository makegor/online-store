{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/utils/validators/validators.js","components/common/FormControls/FormControls.jsx","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","formControl__span","Textarea","restProps","Input","maxLength20","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","placeholder","name","component","validate","type","style","formSummaryError","login__btn","connect","state","isAuth","auth","login","window","scrollTo","to","container","formData","email","password","rememberMe"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,kBAAoB,wCAAwC,iBAAmB,yC,iCCDrL,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAC5B,MAAM,iBAAN,OAAwBA,EAAxB,e,yJCJSE,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,yCAEvDC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEtC,OACI,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,IAAtE,UACI,8BACKJ,EAAMQ,WAEX,qBAAKH,UAAWC,IAAOG,kBAAvB,SACKP,GAAY,+BAAOH,EAAKK,cAM5BM,EAAW,SAACV,GAAW,IACxBF,EAAqCE,EAArCF,MAAuBa,GAAcX,EAA9BD,KAA8BC,EAAxBC,MADU,YACcD,EADd,2BAE/B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,oDAAcF,GAAWa,QAG/CC,EAAQ,SAACZ,GAAW,IACrBF,EAAqCE,EAArCF,MAAuBa,GAAcX,EAA9BD,KAA8BC,EAAxBC,MADO,YACiBD,EADjB,2BAE5B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,iDAAWF,GAAWa,S,oBCzBzDrB,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,4B,iCCDpE,sHAUMsB,EAAcnB,YAAiB,IAsB/BoB,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EApBP,SAACf,GACb,OAAO,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACH,8BACI,cAAC,IAAD,CAAOC,YAAa,SAAUC,KAAM,QAASC,UAAWT,IACpDU,SAAU,CAAC9B,IAAUqB,OAG7B,8BACI,cAAC,IAAD,CAAOM,YAAa,YAAaC,KAAM,WAAYC,UAAWT,IAAOW,KAAM,WACvED,SAAU,CAAC9B,IAAUqB,OAG5Bb,EAAMI,OAAS,qBAAKC,UAAWmB,IAAMC,iBAAtB,SAAyCzB,EAAMI,QAE/D,8BACI,wBAAQC,UAAWC,IAAOoB,WAA1B,2BA6BGC,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EAtBH,SAAC3B,GACTgC,OAAOC,SAAS,EAAG,GAKnB,OAAIjC,EAAM6B,OACC,cAAC,IAAD,CAAUK,GAAG,aAIb,sBAAK7B,UAAWC,IAAO6B,UAAvB,UACC,yCACA,cAACrB,EAAD,CAAgBG,SAXX,SAACmB,GACdpC,EAAM+B,MAAMK,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/5.1d2508f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__15npX\",\"error\":\"FormControls_error__1UcGW\",\"formControl__span\":\"FormControls_formControl__span__2XV5H\",\"formSummaryError\":\"FormControls_formSummaryError__2oFJm\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) \r\n    return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div className={styles.formControl__span}>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__g1JgQ\",\"login__btn\":\"Login_login__btn__v30wk\"};","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from '../common/FormControls/FormControls';\r\nimport { required, maxLengthCreator } from '../utils/validators/validators';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport style from '../common/FormControls/FormControls.module.css';\r\nimport styles from './Login.module.css';\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nlet LoginForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={\"Email:\"} name={\"email\"} component={Input}\r\n                validate={[required, maxLength20]} />\r\n        </div>\r\n\r\n        <div>\r\n            <Field placeholder={\"Password:\"} name={\"password\"} component={Input} type={\"password\"}\r\n                validate={[required, maxLength20]} />\r\n        </div>\r\n\r\n        {props.error && <div className={style.formSummaryError}>{props.error}</div>}\r\n\r\n        <div>\r\n            <button className={styles.login__btn}>login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'Login' })(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    window.scrollTo(0, 0);\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/buy/bag\" />\r\n    }\r\n\r\n    else {\r\n        return <div className={styles.container}>\r\n                <h1>SIGN IN</h1>\r\n                <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}